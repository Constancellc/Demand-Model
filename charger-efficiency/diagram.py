import csv
import random
import copy
import numpy as np
import matplotlib.pyplot as plt
from cvxopt import matrix, spdiag, sparse, solvers

data_m = [[9.811194146467015, 88.25348151007915],
          [8.601880704850673, 88.20616054932024],
          [7.718059730303613, 87.78027190249014],
          [7.2294993059960095, 86.97854562501723],
          [6.717682853965014, 86.17590932906819],
          [6.112842291040453, 85.36963295921463],
          [5.391537747382545, 83.77619060750627],
          [4.716561417055031, 81.40195240327607],
          [4.041309323552932, 77.85379036483468],
          [3.3193613324876594, 73.5211923999669],
          [2.7598378512533426, 67.62973278548384],
          [2.060226677329508, 59.384965391721586],
          [1.3828603994889175, 46.836720624327825],
          [0.7042991478917902, 29.201472575352298],
          [0.023164106665195305, 0.6096020737390688],
          [0.3530687845278475, 19.013815735046748],
          [1.032273483532343, 39.3882193971817]]

data_l = [88.25348151007915, 85.48338526873121, 79.96594324793867,
          77.57896478504261, 73.62857458015057, 68.10840250392963,
          56.331853404296396, 33.985439704381875, 12.035794060061221,
          1.4304387392107571, 0]
data_l2 = []
for i in range(1,len(data_l)+1):
    data_l2.append(data_l[-i])

data_u = [25.653310536910894, 72.25717673661859, 83.64332790999089,
          90.33742382042303, 92.72258224636681, 93.93654689352783,
          94.3669856327386, 94.01389846399911, 93.26950335052257,
          91.74431238452418, 88.25348151007915]


data_m = sorted(data_m)
m_x = []
m_y = []

for p in data_m:
    m_x.append(p[0]*10)
    m_y.append(p[1])

e = [0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,0.9811194146467015]
for i in range(11):
    e[i] = e[i]*100
plt.figure(figsize=(5,3))
plt.rcParams["font.family"] = 'serif'
plt.rcParams["font.size"] = '9'
plt.plot(m_x,m_y,'b')
plt.fill_between(e,data_l2,data_u,color='#CCCCFF')
plt.xlim(0,100)
plt.ylim(0,100)
plt.ylabel('Efficiency (%)')
plt.xlabel('% Rated Power')
plt.grid()
plt.tight_layout()
plt.savefig('../../Dropbox/papers/PowerTech/img/data.eps',format='eps',
            dpi=1000, bbox_inches='tight', pad_inches=0)
plt.show()
